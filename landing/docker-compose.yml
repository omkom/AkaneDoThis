# Note: 'version' attribute is obsolete and will be ignored in newer Docker Compose versions

# Define common configurations to avoid repetition
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  # Development environment with hot reloading
  dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
      # Mount the source code for development
      - .:/app:delegated
      # Use Docker volumes for node_modules and dist for better performance
      - node_modules:/app/node_modules
      - dist:/app/dist
    ports:
      - "${DEV_PORT:-5173}:5173"
      - "${API_PORT:-3000}:3000"
    environment:
      - NODE_ENV=development
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
      # Vite optimization settings
      - VITE_DEV_SERVER_HOST=0.0.0.0
      - VITE_DEV_SERVER_PORT=5173
      - CHOKIDAR_USEPOLLING=true
      # Performance tuning
      - NODE_OPTIONS="--max-old-space-size=2048"
    command: >
      sh -c "
        echo 'Starting development servers...' &&
        npm run dev -- --host 0.0.0.0 & 
        node server/index.js & 
        wait
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging: *default-logging
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G

  # Build service for production assets
  build:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    volumes:
      - dist_data:/app/dist
    environment:
      - NODE_ENV=production
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      # Optimize build performance
      - NODE_OPTIONS="--max-old-space-size=4096"
      - VITE_BUILD_MINIFY=true
      - VITE_BUILD_SOURCEMAP=false
    command: >
      sh -c "
        mkdir -p /app/dist &&
        npm run build &&
        cp -r dist/* /app/dist/ &&
        chmod -R 755 /app/dist &&
        echo 'Build completed successfully'
      "
    deploy:
      resources:
        limits:
          cpus: '3.0'
          memory: 4G

  # Standalone server for testing production build
  serve:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "${SERVE_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - PORT=3000
      # Enable compression and caching
      - ENABLE_COMPRESSION=true
      - HTTP_CACHE_CONTROL="public, max-age=86400"
    volumes:
      - dist_data:/app/dist:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    logging: *default-logging
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

# Named volumes for data persistence and better performance
volumes:
  # Volume for storing built artifacts
  dist_data:
    name: akane_dist_data
  # Volume for development node_modules
  node_modules:
  # Volume for development build artifacts
  dist: