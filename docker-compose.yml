version: '3.8'

services:
  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - dist_data:/usr/share/nginx/html:ro
    depends_on:
      - prod
      - n8n
    networks:
      - akane-network
    environment:
      - NGINX_HOST=akane.production
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 60s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # n8n workflow automation
  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    environment:
      - N8N_HOST=n8n
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=https://akane.production/n8n/
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - akane-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Production API and static server
  prod:
    build:
      context: ./landing
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    depends_on:
      - build
    environment:
      - NODE_ENV=production
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
      - PORT=3000
    volumes:
      - dist_data:/app/dist:ro
    networks:
      - akane-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Build service
  build:
    build:
      context: ./landing
      dockerfile: Dockerfile
      target: builder
      args:
        - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
    volumes:
      - dist_data:/app/dist
    environment:
      - NODE_ENV=production
      - VITE_TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
    command: >
      sh -c "
        mkdir -p /app/dist &&
        cp -r dist/* /app/dist/ &&
        chmod -R 755 /app/dist
      "
    networks:
      - akane-network

networks:
  akane-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  n8n_data:
    name: akane_n8n_data
  dist_data:
    name: akane_dist_data