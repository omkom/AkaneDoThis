user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    
    # Disable open_file_cache to prevent stale content
    open_file_cache off;
    
    # Compression settings
    gzip  on;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Main server configuration
    server {
        listen 80 default_server;
        server_name _;
        
        # Basic security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data:; connect-src 'self' https://api.twitch.tv https://id.twitch.tv";
        add_header Content-Security-Policy "img-src 'self' data: https://static-cdn.jtvnw.net;";

        # Root directory for static files
        root /usr/share/nginx/html;
        index index.html;

        # Proxy API requests to the backend service
        location /api/ {
            proxy_pass http://landing:3000;  # Update this to your backend service URL
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Configure CORS headers for API
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';

            # Handle OPTIONS method for CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Disable caching for API endpoints
            proxy_cache off;

            # Increase timeouts for API calls
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # For n8n, proxy to the n8n service
        location /n8n/ {
            proxy_pass http://n8n:5678/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Websocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Security headers for n8n admin area
            add_header X-Frame-Options "DENY";
            
            # Increase timeouts for n8n
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # Twitch callback URL
        location = /twitch-callback.html {
            # Set appropriate cache-control headers
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Twitch auth client JS
        location = /twitch-auth-client.js {
            # Set appropriate cache-control headers for infrequent updates
            add_header Cache-Control "public, max-age=3600";
        }

        # Static content with appropriate cache durations
        location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
            expires 7d;  # Images can be cached longer
            add_header Cache-Control "public, max-age=604800";
            try_files $uri =404;
        }
        
        location ~* \.(css|js)$ {
            expires 1h;  # Shorter expiration for code files
            add_header Cache-Control "public, max-age=3600";
            try_files $uri =404;
        }
        
        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 30d;  # Font files can be cached longer
            add_header Cache-Control "public, max-age=2592000";
            try_files $uri =404;
        }
        
        # Main landing page paths
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
        }
        
        # robots.txt
        location = /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: *\nAllow: /\n";
        }
        
        # Favicon handling
        location = /favicon.ico {
            access_log off;
            log_not_found off;
        }
        
        # Error handling
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}